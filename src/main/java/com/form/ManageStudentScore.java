/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.form;


import com.entity.ClassWithSubjectEntity;
import com.entity.StudentEntity;
import com.pakage.dao.ClassWithSubjectDAO;
import com.pakage.dao.StudentDAO;
import java.io.File;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Nhi
 */
public class ManageStudentScore extends javax.swing.JFrame {

    static public String class_id = "";
    static public String student_id ="";
    static public String fullname ="";
      private String[] columnNames = {
        "STT", "MSSV", "Ho Ten", "Diem GK", "Diem CK", "Diem Khac", "Diem Tong","Ket qua"
    };

    /**
     * Creates new form ManageStudentScore
     */
    public ManageStudentScore() {
        initComponents();
        initLayout();
         this.setLocationRelativeTo(null);
    }

    private void initLayout() {
        ClassWithSubjectDAO classDAO = new ClassWithSubjectDAO();
        List<String> list = classDAO.getListClass();
        if (list.size() > 0) {
            DefaultComboBoxModel comboboxModel = new DefaultComboBoxModel();
            for (String l : list) {

                comboboxModel.addElement(l);
            }
            cbxClassWithSubject.setModel(comboboxModel);
        } else {
            cbxClassWithSubject.setModel(new javax.swing.DefaultComboBoxModel(new String[]{}));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_quayve = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnImportScore = new javax.swing.JButton();
        txt_pass = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        bt_EditScore = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_percent1 = new javax.swing.JTextField();
        txt_percent2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_fail = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbClass = new javax.swing.JLabel();
        cbxClassWithSubject = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bt_quayve.setText("Quay Ve");
        bt_quayve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_quayveActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel3.setText("So sinh vien dau");

        btnImportScore.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImportScore.setText("Import Bang Diem");
        btnImportScore.setName("bt_importdiem"); // NOI18N
        btnImportScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportScoreActionPerformed(evt);
            }
        });

        txt_pass.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_pass.setText("0");
        txt_pass.setDoubleBuffered(true);
        txt_pass.setEnabled(false);
        txt_pass.setName(""); // NOI18N
        txt_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setText("Ti le");

        bt_EditScore.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bt_EditScore.setText("Sua Diem");
        bt_EditScore.setName("bt_EditScore"); // NOI18N
        bt_EditScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EditScoreActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setText("Ti le");

        txt_percent1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_percent1.setText("0");
        txt_percent1.setEnabled(false);

        txt_percent2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_percent2.setText("0");
        txt_percent2.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel4.setText("So sinh vien rot");

        txt_fail.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_fail.setText("0");
        txt_fail.setDoubleBuffered(true);
        txt_fail.setEnabled(false);
        txt_fail.setName(""); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        lbClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbClass.setText("Lop Mon");

        cbxClassWithSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxClassWithSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClassWithSubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbClass)
                        .addGap(18, 18, 18)
                        .addComponent(cbxClassWithSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnImportScore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_EditScore, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_pass)
                            .addComponent(txt_fail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txt_percent2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txt_percent1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_quayve)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txt_percent1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_quayve))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_percent2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txt_fail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_EditScore)
                    .addComponent(lbClass)
                    .addComponent(cbxClassWithSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImportScore))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_quayveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_quayveActionPerformed
        // TODO add your handling code here:
        AdminDashboard ad = new AdminDashboard();
        ad.setVisible(true);
        this.setVisible(false);          // TODO add your handling code here:

    }//GEN-LAST:event_bt_quayveActionPerformed

    private void btnImportScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportScoreActionPerformed
        // TODO add your handling code here:
        JFileChooser file_chooser = new JFileChooser();

        int result = file_chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file_chooser.getSelectedFile();
            importFromFile(selectedFile);

        }
    }//GEN-LAST:event_btnImportScoreActionPerformed

    private void bt_EditScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EditScoreActionPerformed
        // TODO add your handling code here:
        if(!student_id.equals(""))
        {
           EditScore edit=new EditScore();
            edit.setVisible(true);
            this.setVisible(false);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Chua chon sinh vien can sua", "Notification", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bt_EditScoreActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         
        class_id =(String) cbxClassWithSubject.getSelectedItem();
        int i=jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
       student_id=model.getValueAt(i,1).toString();
       fullname=model.getValueAt(i,2).toString();
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void cbxClassWithSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClassWithSubjectActionPerformed
        // TODO add your handling code here:
        class_id = (String) cbxClassWithSubject.getSelectedItem();
        if (!class_id.equals("null")) {
            listStudentInClass(class_id);
        } else {
            JOptionPane.showMessageDialog(null, "Khong co lop.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_cbxClassWithSubjectActionPerformed

    private void txt_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudentScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudentScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudentScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudentScore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageStudentScore().setVisible(true);
            }
        });
    }

    private void importFromFile(File selectedFile) {
        String csvFile = selectedFile.toString();
        String cvsSplitBy = ",";
        BufferedReader br;
        try {
            br = new BufferedReader(new FileReader(csvFile));
            String line = "";
            int d = 0;
            String mssvnoinsert = "";
            ClassWithSubjectDAO classDAO = new ClassWithSubjectDAO();
            try {
                if ((line = br.readLine()) != null) {
                    String[] l = line.split(cvsSplitBy);
                    String classid = l[0];
                    while ((line = br.readLine()) != null) {
                        String[] sv = line.split(cvsSplitBy);
                        Double midTermScore = Double.valueOf(sv[2]);
                        Double endTermScore = Double.valueOf(sv[3]);
                        Double otherScore =Double.valueOf(sv[4]);
                        Double finalScore = Double.valueOf(sv[5]);
                        ClassWithSubjectEntity new_class_subject = new ClassWithSubjectEntity(classid, sv[0],midTermScore,endTermScore,otherScore,finalScore);

                        
                        if (classDAO.update(new_class_subject)== true ) {
                            d++;
                        } 
                    }
                }
                JOptionPane.showMessageDialog(this, "Da update " + d + " sinh vien");
            } catch (IOException ex) {
                 System.err.println(ex);
            }
        } catch (FileNotFoundException ex) {
             System.err.println(ex);
        }
        initLayout();
    }
     private void listStudentInClass(String class_id) {
        int stt = 1;
        float countpass =0;
        float countfail=0;
        ClassWithSubjectDAO classDAO = new ClassWithSubjectDAO();
        StudentDAO studentDAO = new StudentDAO();
        List<ClassWithSubjectEntity> list = classDAO.getList(class_id.trim());
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(columnNames);
        for (ClassWithSubjectEntity c : list) {
            String[] rows = new String[8];
            Double midterm = c.getMidTermScore();
            Double endterm = c.getEndTermScore();
            Double otherscore = c.getOtherScore();
            Double finalscore =c.getFinalScore();
            if(finalscore >=5)countpass++;
            else countfail++;
            StudentEntity s = studentDAO.get(c.getStudentId().trim());
            rows[0] = String.valueOf(stt);
            rows[1] = s.getStudentId();
            rows[2] =s.getFullName();
            rows[3] = midterm.toString();
            rows[4] = endterm.toString();
            rows[5] = otherscore.toString();
            rows[6] = finalscore.toString();
            if(finalscore>=5)
            {
            rows[7] = "Dau";
            }
            else
            {
                rows[7] = "Rot";
            }
            tableModel.addRow(rows);
            stt++;

        }
        jTable1.setModel(tableModel);
        txt_pass.setText(String.valueOf(countpass));
        txt_fail.setText(String.valueOf(countfail));
        float percent1= countpass*100/list.size();
        float percent2= countfail*100/list.size();
        txt_percent1.setText(String.valueOf(percent1));
        txt_percent2.setText(String.valueOf(percent2));
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_EditScore;
    private javax.swing.JButton bt_quayve;
    private javax.swing.JButton btnImportScore;
    private javax.swing.JComboBox cbxClassWithSubject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbClass;
    private javax.swing.JTextField txt_fail;
    private javax.swing.JTextField txt_pass;
    private javax.swing.JTextField txt_percent1;
    private javax.swing.JTextField txt_percent2;
    // End of variables declaration//GEN-END:variables
}
